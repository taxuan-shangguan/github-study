一、Git 基础
1、Git 介绍
Git 是世界上最先进的分布式版本控制系统
2、Git与GitHub
    2.1 两者区别
    Git 是一个软件，一个记录一个或者若干个文件内容的变化。
    GitHub 是一个可以放代码的网站。
    2.2 GitHub注册
    用户名 邮箱 密码
    验证邮箱
3、Git 安装
下载后下一步到底安装
选择安装位置时尽量不要有中文
二、Git的使用
1、本地仓库
    1.1 工作流程
    Git 本地操作的三个区域
    工作区（working directory）：添加、编辑、修改文件动作
    暂存区：暂存已经修改的文件最后统一提交到git仓库中
    Git 仓库 （Git Repository）：最终确定的文件保存到仓库中，成为一个新的版本，且对他人可见 
    git status 查询状态
    git add . 上传文件  到暂存区
    git status 查询状态
    git commit -m "提交描述" 到仓库
    git status 查询状态
    1.2 本地仓库操作
        1.2.1 安装好后需要做全局配置
        $git config --global user.name "用户名" 
        $git config --global user.email "邮箱地址"
        检测设置的用户名
        $git config --global user.name 回车
        检测设置的邮箱地址
        $git config --global user.email 回车
        1.2.2 创建仓库
        当使用git去管理项目时，项目可以是空目录也可以是非空目录。注意：目录中不要出现中文。
        mkdir project 桌面上创建项目
        cd project 进入到项目目录
        git init 初始化仓库，让git知道，它需要管理这个目录。将隐藏的文件.git 显示出来。
        1.2.3 仓库常用指令
        git status 查看当前状态
        git add 文件名 语法1：git add 文件名  语法2：git add 文件名1 文件名2 ... 语法3：git add .
        git commit -m "注释内容"
    1.3 时光穿梭机-版本回退
        1.3.1 查看版本，确认回到的版本时间点
        git log
        git log -pretty=oneline 
        1.3.2 回退操作
        git reset --hard 版本号（金黄色）
        1.3.3 回到未来
        回到过去之后要想回到之前的最新的版本时，则需要指令去查询历史操作，已得到最新的commit id
        git reflog
        git reset --hard 版本号（不用写全，git自动识别，至少写前4位）
2、远程操作
    2.1 线上仓库建立
        2.1.1 GitHub账号注册
        注册后建立仓库repository，即项目
    2.2 两种常规使用方式
        2.2.1 基于http协议
        GitHub上创建空目录，在本地打开git软件输入指令git clone 线上仓库地址，克隆到本地。
        在仓库上做对应的操作（提交暂存区、提交本地仓库、提交线上仓库、拉取线上仓库）
        git push ：首次提交线上仓库 git push  出现403致命错误是没有授权信息，不是任何人可以往线上仓库提交内容的，需要鉴权。
        鉴权需要修改.git/config 文件
        [remote "origin"]
        url=http://github.com/taxuan-shangguan/project.git
        改为 url=http://用户名:密码@github.com/taxuan-shangguan/project.git
        修改后继续执行 git push ,刷新GitHub页面
        git pull
        2.2.2 基于ssh协议
            1.与http协议的不同只是涉及到鉴权的方式不一样，其他都不受影响
            2.需要自行安装OpenSSH
                生成客户端公私钥文件：ssh-keygen -t rsa -C "注册邮箱"
                将公钥上传到GitHub        
                git中输入ssh-keygen -t rsa -C "注册邮箱" 回车回车直到出现以下图片内容 生成公钥.png
                然后打开C盘中 用户/admin/.ssh/id_rsa.pub 使用代码器打开将内容复制，然后粘贴到 如图所示地方 GitHub添加公钥1.png 、GitHub添加公钥2.png 
                
